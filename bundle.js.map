{"version":3,"sources":["webpack:///webpack/bootstrap 7d14d69b8d64cd761f32","webpack:///./source.js","webpack:///./lib/util.js","webpack:///./lib/movingObject.js","webpack:///./lib/mass.js","webpack:///./lib/ship.js","webpack:///./lib/game.js","webpack:///./lib/gameView.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,uD;AACA,8C;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,yD;AACA,gD;AACA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA,4D;AACA,8C;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,sD;AACA,wC;AACA;AACA;AACA;AACA,MAAK,E;;;AAGL;AACA;AACA;AACA,oD;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK,E;;;;;;ACrFL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACvBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvCA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxCA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uB;;;;;;ACjEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,iBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,kBAAiB,mBAAmB;AACpC,oBAAmB,mBAAmB;AACtC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;;AAEA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;;;;;;ACzLA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6B;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7d14d69b8d64cd761f32\n **/","var Util = require('./lib/util.js');\nvar MovingObject = require('./lib/movingObject.js');\nvar Mass = require('./lib/mass.js');\nvar Ship = require('./lib/ship.js');\nvar Game = require('./lib/game.js');\nvar GameView = require('./lib/gameView.js');\n\n\n    var canvas = document.getElementById(\"game-canvas\");\n    canvas.height = window.innerHeight;\n    canvas.width = window.innerWidth;\n    var context = canvas.getContext(\"2d\");\n\n    var newGame = new Game();\n    var gameView = new GameView(newGame, context);\n\n    gameView.start();\n    \n\n    // Reset-All Button\n    var resetAllButton = document.createElement(\"Button\");\n    resetAllButton.id = 'reset-all';\n    resetAllButton.className = 'button';\n    var resetAllText = document.createTextNode(\"All\");     \n    resetAllButton.appendChild(resetAllText); \n    document.body.appendChild(resetAllButton);\n    resetAllButton.addEventListener('click', function(e){\n      newGame.resetAll();\n    });\n\n    // Reset-Ship Button\n    var resetShipButton = document.createElement(\"Button\");\n    resetShipButton.id = 'reset-ship';\n    resetShipButton.className = 'button';\n    var resetShipText = document.createTextNode(\"Mass\");     \n    resetShipButton.appendChild(resetShipText); \n    document.body.appendChild(resetShipButton);\n    resetShipButton.addEventListener('click', function(e){\n      newGame.resetShip();\n    });\n\n\n    // Populate\n    var populateButton = document.createElement(\"Button\");\n    populateButton.id = 'populate';\n    populateButton.className = \"button\";\n    var populateText = document.createTextNode(\"Populate\");     \n    populateButton.appendChild(populateText); \n    document.body.appendChild(populateButton);\n    populateButton.addEventListener('click', function(e){\n      newGame.populateMasses();\n    });\n\n    // Clear Button\n    var clearButton = document.createElement(\"Button\");\n    clearButton.id = 'clear';\n    clearButton.className = \"button\";\n    var clearText = document.createTextNode(\"Clear\");     \n    clearButton.appendChild(clearText); \n    document.body.appendChild(clearButton);\n    clearButton.addEventListener('click', function(e){\n      newGame.clearMasses();\n    }); \n\n\n    // AntiGravity\n    var antiGButton = document.createElement(\"Button\");\n    antiGButton.id = 'anti-gravity';\n    var antiGText = document.createTextNode(\"OFF\");     \n    antiGButton.appendChild(antiGText); \n    document.body.appendChild(antiGButton);\n    antiGButton.addEventListener('click', function(e){\n      if (e.currentTarget.textContent == \"OFF\"){\n        newGame.antiGravity = true;\n        this.textContent = \"ON\";\n      } else {\n        newGame.antiGravity = false;\n        this.textContent = \"OFF\";\n      }\n    });\n\n    document.body.addEventListener(\"click\", function(e){\n      var posX = event.clientX;\n      var posY = event.clientY;\n      newGame.addMass([posX,posY]);\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./source.js\n ** module id = 0\n ** module chunks = 0\n **/","var Util = function()  {};\nfunction Surrogate() {}\n\nUtil.inherits = function(ChildClass, ParentClass) {\n  Surrogate.prototype = ParentClass.prototype;\n  ChildClass.prototype = new Surrogate();\n  ChildClass.prototype.constructor = ChildClass;\n};\n\nUtil.randomVec = function() {\n  var dx = (Math.random() * 2) - 2;\n  var dy = (Math.random() * 2) - 2;\n  return [dx, dy];\n};\n\nUtil.distance = function(startObj, endObj) {\n  var startPos = startObj.pos;\n  var endPos = endObj.pos;\n\n  return Math.sqrt(Math.pow((startPos[0] - endPos[0]), 2) +\n         Math.pow((startPos[1] - endPos[1]), 2));\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 1\n ** module chunks = 0\n **/","var Util = require('./util.js');\n\nvar MovingObject = function(pos, vel, radius, size, color, game) {\n  this.pos = pos;\n  this.vel = vel;\n  this.radius = radius;\n  this.size = size;\n  this.color = color;\n  this.game = game;\n};\n\nMovingObject.prototype.draw = function(ctx) {\n  ctx.fillStyle = this.color;\n  ctx.beginPath();\n\n  ctx.arc(\n    this.pos[0],\n    this.pos[1],\n    this.radius,\n    0,\n    2 * Math.PI,\n    false\n  );\n\n  ctx.fill();\n};\n\nMovingObject.prototype.move = function() {\n  this.pos = this.game.wrap(this.pos);\n  this.pos[0] += (this.vel[0] * 0.1);\n  this.pos[1] += (this.vel[1] * 0.1);\n};\n\nMovingObject.prototype.isCollidedWith = function (otherObject) {\n  var distance =  Util.distance(this, otherObject);\n  var sumRadii = (this.radius * 0.175) + (otherObject.radius * 0.175);\n  return (distance < sumRadii);\n};\n\nmodule.exports = MovingObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/movingObject.js\n ** module id = 2\n ** module chunks = 0\n **/","var Util = require('./util.js');\nvar MovingObject = require('./movingObject.js');\n\nvar Mass = function(pos, game) {\n  var radius = (Math.random() * 14) + 7;\n  var size = radius * 5;\n  var randomColor = \"#\" + Math.floor(Math.random()*16777215).toString(16);\n  var vel = Util.randomVec();\n\n  // create more tangential initial velocity vectors in relation to origin\n  var wOrigin = (window.innerWidth / 2);\n  var hOrigin = (window.innerHeight / 2);\n  if ((pos[0] - wOrigin) * (pos[1] - hOrigin) > 0) {\n    vel[0] *= -1;\n    vel[1] *= 1;\n  } else if ((pos[0] - wOrigin) * (pos[1] - hOrigin) < 0) {\n    vel[0] *= 1;\n    vel[1] *= -1;\n  }\n  MovingObject.call(this, \n                    pos,\n                    vel,\n                    radius,\n                    size,\n                    randomColor, game);\n};\n\nUtil.inherits(Mass, MovingObject);\n\n\nMass.prototype.collideWith = function (otherObject) {\n  if((this instanceof Mass) && (otherObject instanceof Mass)) {\n    if (this.radius >= otherObject.radius){\n      this.radius = Math.sqrt((Math.PI * Math.pow(this.radius, 2) + (Math.PI * Math.pow(otherObject.radius, 2))) / Math.PI);\n      this.size += otherObject.size;\n      this.game.removeMass(otherObject);\n    }\n  }\n};\n\nmodule.exports = Mass;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/mass.js\n ** module id = 3\n ** module chunks = 0\n **/","var Util = require('./util.js');\nvar MovingObject = require('./movingObject.js');\n\n\nvar Ship = function(game){\n  MovingObject.call(this, [window.innerWidth/2, window.innerHeight/2],\n                    [0,0],\n                    Ship.RADIUS,\n                    Ship.SIZE,\n                    Ship.COLOR, game);\n};\nUtil.inherits(Ship, MovingObject);\n\nShip.RADIUS = 10;\nShip.SIZE = 500;\nShip.COLOR = \"#FFF\";\n\nShip.prototype.draw = function(ctx) {\n  ctx.fillStyle = this.color;\n  ctx.beginPath();\n\n  ctx.arc(\n    this.pos[0],\n    this.pos[1],\n    this.radius,\n    0,\n    2 * Math.PI,\n    false\n  );\n\n  ctx.fill();\n  ctx.fillStyle = \"black\";\n  ctx.font = this.radius * 0.5 + \"px Verdana\";\n  ctx.textAlign = \"center\";\n  ctx.fillText(Math.round(this.size), this.pos[0] , this.pos[1] + (0.2 * this.radius));\n};\n\n\nShip.prototype.reset = function () {\n  this.pos = [window.innerWidth/2,window.innerHeight/2];\n  this.vel = [0,0];\n  this.size = 500;\n  this.radius = 10;\n};\n\nShip.prototype.move = function(){\n  this.pos = this.game.wrap(this.pos);\n  this.pos[0] += (this.vel[0]);\n  this.pos[1] += (this.vel[1]);\n\n  this.vel[0] *= 0.999;\n  this.vel[1] *= 0.999;\n};\n\nShip.prototype.power = function(impulse) {\n  this.vel[0] += impulse[0];\n  this.vel[1] += impulse[1];\n};\n\nShip.prototype.collideWith = function(otherObject){\n  this.radius = Math.sqrt((Math.PI * Math.pow(this.radius, 2) + (Math.PI * Math.pow(otherObject.radius, 2))) / Math.PI);\n  this.size += otherObject.size;\n  this.game.removeMass(otherObject);\n};\n\nmodule.exports = Ship;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/ship.js\n ** module id = 4\n ** module chunks = 0\n **/","var Mass = require('./mass.js');\nvar Ship = require('./ship.js');\nvar Util = require('./util.js');\n\nvar Game = function() {\n  this.dimX = Game.DIM_X;\n  this.dimY = Game.DIM_Y;\n  this.numMasses = Game.NUM_MASSES;\n  this.masses = [];\n  this.addMasses();\n  this.ship = new Ship(this);\n  this.antiGravity = false;\n};\n\nGame.DIM_X = window.innerWidth;\nGame.DIM_Y = window.innerHeight;\nGame.NUM_MASSES = 15;\n\n\nGame.prototype.addMasses = function() {\n  for(var i = 0; i < this.numMasses; i++){\n    var newMass = new Mass(this.randomPos(), this);\n    this.masses.push(newMass);\n  }\n};\n\nGame.prototype.addMass = function(pos) {\n  var newMass = new Mass(pos, this);\n  this.masses.push(newMass);\n};\n\nGame.prototype.populateMasses = function() {\n  for(var i = 0; i < 15; i++){\n    var newMass = new Mass(this.randomPos(), this);\n    this.masses.push(newMass);\n  }\n};\n\nGame.prototype.resetAll = function() {\n  this.masses = [];\n  this.addMasses();\n  this.ship.reset();\n};\n\nGame.prototype.resetShip = function() {\n  this.ship.reset();\n};\n\nGame.prototype.clearMasses = function() {\n  this.masses = [];\n};\n\nGame.prototype.randomPos = function () {\n  var x = (Math.random() * Game.DIM_X);\n  var y = (Math.random() * Game.DIM_Y);\n  return [x,y];\n};\n\nGame.prototype.draw = function(ctx) {\n  ctx.clearRect(0, 0, this.dimX, this.dimY);\n  this.allObjects().forEach(function(obj) {\n    obj.draw(ctx);\n  });\n};\n\nGame.prototype.updateObjects = function() {\n  var masses = this.allObjects();\n  for (var i = 0; i < masses.length; i++){\n    for (var j = 0; j < masses.length; j++){\n      var mainObj = masses[i];\n      var otherObj = masses[j];\n\n      if (mainObj !== otherObj && mainObj !== this.ship){\n        var distance = Util.distance(mainObj, otherObj);\n\n        // Main Object \n\n        // main position coordinates\n        var mainX = mainObj.pos[0];\n        var mainY = mainObj.pos[1];\n        // main velocity vectors\n        var main_dx = mainObj.vel[0];\n        var main_dy = mainObj.vel[1];\n\n\n        // Other Object\n\n        // other position coordinates\n        var otherX = otherObj.pos[0];\n        var otherY = otherObj.pos[1];\n\n\n        // Main's Distance to Other Object\n        var mainDistX = mainX - otherX;\n        var mainDistY = mainY - otherY;\n\n        // Sin/Cos Theta\n        var sinTheta = mainDistY / distance;\n        var cosTheta = mainDistX / distance;\n\n        // Acceleration\n        var accel = (otherObj.size) / Math.pow(distance,2);\n        \n        // Gravitational Velocity Vectors\n        var grav_dx = accel * cosTheta;\n        var grav_dy = accel * sinTheta;\n\n\n\n        // Sum Vectors (max velocity: 5)\n\n        if (this.antiGravity == true){\n          mainObj.vel[0] += grav_dx;\n          mainObj.vel[1] += grav_dy;\n        } else {\n          mainObj.vel[0] -= grav_dx;\n          mainObj.vel[1] -= grav_dy;\n        }\n\n        if (mainObj.vel[0] > 5 || mainObj.vel[0] < -5){\n          if (mainObj.vel[0] > 0){\n            mainObj.vel[0] = 5;\n          } else{\n            mainObj.vel[0] = -5;\n          }\n        }\n        if (mainObj.vel[1] > 5 || mainObj.vel[1] < -5){\n          if (mainObj.vel[1] > 0){\n            mainObj.vel[1] = 5;\n          } else {\n            mainObj.vel[1] = -5;\n          }\n        }\n\n        mainObj.move();\n\n        // if object is ship, ignore gravitional pull of other objects\n      } else if (mainObj == this.ship) {\n        mainObj.move();\n      }\n    }\n  }\n};\n\nGame.prototype.wrap = function (pos) {\n  var posArray = pos;\n  if (pos[0] < -50){\n    posArray[0] = Game.DIM_X + 50;\n  } else if (pos[0] > Game.DIM_X + 50) {\n    posArray[0] = -50;\n  } else if (pos[1] < -50){\n    posArray[1] = Game.DIM_Y + 50;\n  } else if (pos[1] > Game.DIM_Y + 50) {\n    posArray[1] = -50;\n  }\n  return posArray;\n};\n\nGame.prototype.checkCollisions = function () {\n  var current = this;\n  this.allObjects().forEach(function(obj1) {\n    current.allObjects().forEach(function(obj2) {\n      if(obj1 !== obj2 && obj1.isCollidedWith(obj2)){\n        obj1.collideWith(obj2);\n      }\n    });\n  });\n};\n\nGame.prototype.removeMass = function (mass) {\n  var idx = this.masses.indexOf(mass);\n  this.masses.splice(idx, 1);\n};\n\n\nGame.prototype.step = function() {\n  this.updateObjects();\n  this.checkCollisions();\n};\n\n\nGame.prototype.allObjects = function () {\n  return this.masses.concat([this.ship]);\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 5\n ** module chunks = 0\n **/","var GameView = function(game, ctx) {\n  this.game = game;\n  this.ctx = ctx;\n  this.ship = this.game.ship;\n};\n\nGameView.MOVES = {\n  \"up\":    [ 0, -0.1],\n  \"left\":  [-0.1,  0],\n  \"down\":  [ 0,  0.1],\n  \"right\": [ 0.1,  0],\n};\n\nGameView.prototype.start = function(){\n  this.bindKeyHandlers();\n  setInterval(this.game.draw.bind(this.game), 20, this.ctx);\n  setInterval(this.game.step.bind(this.game), 20);\n};\n\nGameView.prototype.bindKeyHandlers = function () {\n  var ship = this.ship;\n\n  Object.keys(GameView.MOVES).forEach(function (coord) {\n    var move = GameView.MOVES[coord];\n    key(coord, function () { \n      var max = false;\n      if( ship.vel[0] + move[0] > 1.55 || ship.vel[0] + move[0] < -1.55){\n        if (ship.vel[0] > 0){\n          ship.vel = [1.55, ship.vel[1]];\n        } else {\n          ship.vel = [-1.55, ship.vel[1]];\n        }\n        max = true;\n      }\n      if (ship.vel[1] + move[1] > 1.55 || ship.vel[1] + move[1] < -1.55){\n        if (ship.vel[1] > 0) {\n          ship.vel = [ship.vel[0], 1.55];\n        } else {\n          ship.vel = [ship.vel[0], -1.55];\n        }\n        max = true;\n      }\n      if (max !== true){\n        ship.power(move);\n      }\n    });\n  });\n\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/gameView.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}